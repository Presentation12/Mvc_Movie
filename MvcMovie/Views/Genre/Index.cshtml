@model MvcMovie.Models.MovieGenreViewModel

@{
    Layout = "/Views/Shared/App/_Layout.cshtml";
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form id="form-filter" asp-controller="Genre" asp-action="Index" method="get">
    <p>
        <div class="input-group">
            <input type="text" id="genre-filter" asp-for="SearchString" class="form-control" placeholder="Genre..." />
            <input type="submit" id="search-button" onclick="submitSearch(event)" value="Filter" class="btn btn-primary" />
        </div>
    </p>
</form>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<table id="table"
       data-toggle="table"
       data-show-fullscreen="true"
       data-query-params="queryParams"
       data-pagination="true"
       data-id-field="id"
       data-page-list="[10, 25, 50, 100, all]"
       data-show-footer="true"
       data-side-pagination="server"
       data-url="https://localhost:7180/Genre/Paginate"
       data-method="POST"
       data-search="false"
       data-show-columns="true">
    <thead>
        <tr>
            <th data-field="id">Id</th>
            <th data-field="name">Name</th>
            <th data-field="" data-formatter="operateFormatter">Actions</th>
        </tr>
    </thead>
</table>

<!-- Delete Modal-->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Are you sure you want to delete this?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">Select "Delete" below if you are ready to delete this genre.</div>
            <form id="delete-form" class="modal-footer" asp-action="Delete">
                <input type="hidden" id="delete-genre-id" name="id" />
                <input type="submit" href="/Genre/Index" value="Delete" class="btn btn-danger" />
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
            </form>
        </div>
    </div>
</div>

<style>
    .select,
    #locale {
        width: 100%;
    }

    .like {
        margin-right: 10px;
    }
</style>

@section scripts {
    <script>
        var $table = $('#table')
        var $remove = $('#remove')
        var selections = []

        function getIdSelections() {
            return $.map($table.bootstrapTable('getSelections'), function (row) {
                return row.id
            })
        }

        function responseHandler(res) {
            $.each(res.rows, function (i, row) {
                row.state = $.inArray(row.id, selections) !== -1
            })
            return res
        }

        function detailFormatter(index, row) {
            var html = []
            $.each(row, function (key, value) {
                html.push('<p><b>' + key + ':</b> ' + value + '</p>')
            })
            return html.join('')
        }

        function operateFormatter(value, row, index) {
            return [
                `<a class="delete" href="#" onclick="deleteGenre(${row.id})" data-toggle="modal" data-target="#deleteModal" title="Delete">`,
                '<i class="fa fa-trash"></i>',
                '</a>  '
            ].join('')
        }

        // store the genre id (called on delete confirmation pop-up)
        function deleteGenre(id) {
            $('#delete-genre-id').val(id);
        }

        // trigger delete genre
        $('#delete-form').submit(function (e) {
            e.preventDefault();

            var id = $('#delete-genre-id').val()

            $.ajax({
                url: 'https://localhost:7180/Genre/Delete/' + id,                              
                type: 'POST',
                contentType: 'application/json',
                success: function (response) {
                    window.location.href = "/Genre/Index";
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Delete failed: ' + errorThrown);
                }
            });
        });

        window.operateEvents = {
            'click .like': function (e, value, row, index) {
                alert('You click like action, row: ' + JSON.stringify(row))
            },
            'click .remove': function (e, value, row, index) {
                $table.bootstrapTable('remove', {
                    field: 'id',
                    values: [row.id]
                })
            }
        }

        // refresh the table when is submited the genre filter
        function submitSearch(event) {
            event.preventDefault()
            $('#table').bootstrapTable('refresh')
        }

        function queryParams(params) {
            const genreFilter = $('#genre-filter').val();
            var search = [];
            search.push({
                name: "Genre",
                value: genreFilter
            });
            params.search = search;
            return JSON.stringify(params);
        }

    </script>
}
